global empleados

empleados = [
         ['1', 'Guadalupe', 22, 56, 1.3, '1','1','0','1','1', '1'],
         ['2', 'Ramona', 22, 83, 1.5, '1','1','1','1','1','0' ],
         ['3', 'Rodrigo', 22, 100, 1.9, '1','0','1','1','1','1' ]]
#_____________________________________________________________________________________________________________________________
def alta_empleado():
    """Explicación de la función
    Si se manda a llamar a la función, primero se solicita el Id del empleado, se asegura que sólo sea número entero
    Se solicita el nombre y se asegura que sea un string
    Se solicita el peso y sólo acepta valores enteros
    Se solicita la estatura y acepta numeros decimales
    Se solicita telear 1 o 0 para las enfermedades
    Se verifica que sea 0 o 1, si no, se interrumpe el seguir preguntando.
    Si se teclea 1 se escribe el nombre de la enfermedad
    Si teclea 0 se sustituye por guiones ______
    Se imprimen los datos de nuevo empleado dado de alta
    Se agrega a la lista de empleados los datos de nuevo empleado """

    id = int(input("Teclea el Id del empleado: "))
    nombre = str(input("Teclea el nombre del empleado: "))
    edad = int(input("Teclea la edad del empleado: "))
    peso = int(input("Teclea el peso (Kg): "))
    estatura = float(input("Teclea la estatura (Mts): "))

    diabetes = int(input("Diabetes 1-Si  0-No ? : "))       
    hipertension = int(input("Hipertensión 1-Si  0-No ? : "))  
    enf_corazon = int(input("Enfermedad del corazón 1-Si  0-No ? : "))
    cancer = int(input("Cáncer 1-Si  0-No ? : "))
    tabaquismo = int(input("Tabaquismo 1-Si  0-No ? : "))
    vacuna_covid = int(input("Vacuna covid-19 1-Si  0-No ? : "))
   
    datos_empleado = [id, nombre, edad, peso, estatura, diabetes, hipertension, enf_corazon, cancer, tabaquismo, vacuna_covid]
    print(f"Se dió de alta un empleado existosamente {datos_empleado}")
    empleados.append(datos_empleado)


nombre_archivo = "empleados"
def guardar_archivo(nombre):

  with open(nombre_archivo, "w") as archivo: 

    for empleado in empleados: 
      empleado[0] = str(empleado[0]) 
      empleado[2] = str(empleado[2]) 
      empleado[3] = str(empleado[3]) 
      empleado[4] = str(empleado[4])
      empleado[5] = str(empleado[5]) 
      empleado[6] = str(empleado[6]) 
      empleado[7] = str(empleado[7]) 
      empleado[8] = str(empleado[8]) 
      empleado[9] = str(empleado[9]) 
      empleado[10] = str(empleado[10]) 

      texto = ",".join(empleado) 
      archivo.write(texto + "\n") 

#_____________________________________________________________________________________________________________________________

def leer_archivo(nombre):
  
  with open(nombre_archivo, "r") as archivo:
    
    contenido = archivo.readlines() 

    for elemento in contenido:
      
      linea = elemento.split(",") 
      linea[10] = linea[10][:-1] 
      empleados.append(linea) 


def imc_empleado():

  """Explicación de la función
  Se inicializa con un contador para cada clasificación de índice de masa corporal existente
  En una lista se almacenan las clasificaciones de IMC
  Se imprimen los titulos de la tabla a generar
  Con un ciclo for se calcula el IMC por cada empleado en la lista de empleados, tomando en cuenta los valores de peso y estatura
  Se adecua el tipo de IMC del empleado con cada clasificación y se agrega un sumador
  Se redondea el IMC a dos decimales para hacerlo más concreto
  Se imprimen los IMC obtenidos de cada empleado
  Gracias a los contadores se obtiene el número de empleados dentro de cada clasificación
  Se calcula el porcentaje de empledos para cada clasificación"""


  contador_imc = [0, 0, 0, 0, 0, 0, 0, 0]
  etiqueta = ["Delgadez severa", "Delgadez moderada", "Delgadez aceptable", "Normal", "Pre-obeso", "Obesidad tipo I", "Obesidad tipo II", "Obesidad tipo III"]

  print(f'{"Clasificación IMC":<20}{"IMC":<10}{"ID":<10}{"Nombre":<15}{"Peso":<10}{"Estatura":<10}{"Enfermedades":^77}{"Vacuna Covid":<12}')

  for empleado in empleados:    
    id, nombre, edad, peso, estatura, diabetes, hipertension, enf_corazon, cancer, tabaquismo, vacuna_covid = empleado

    imc = peso / estatura ** 2

    if imc < 16:
      clasificacion = etiqueta[0]
      contador_imc[0] += 1
    elif 16 <= imc and imc < 17:
      clasificacion = etiqueta[1]
      contador_imc[1] += 1
    elif 17 <= imc and imc < 18.50:
      clasificacion = etiqueta[2]
      contador_imc[2] += 1
    elif 18.50 <= imc and imc < 25:
      clasificacion = etiqueta[3]
      contador_imc[3] += 1
    elif 25 <= imc and imc < 30:
      clasificacion = etiqueta[4]
      contador_imc[4] += 1
    elif 30 <= imc and imc < 35:
      clasificacion = etiqueta[5]
      contador_imc[5] += 1
    elif 35 <= imc and imc < 40:
      clasificacion = etiqueta[6]
      contador_imc[6] += 1
    else:
      clasificacion = etiqueta[7]
      contador_imc[7] += 1

    imc = round(imc, 2)
    
    print(f'{clasificacion:<20}{imc:<10}{id:<10}{nombre:<15}{peso:<10}{estatura:<10}{"Diabetes" if diabetes == "1" else "____________":15}{"Hipertensión" if hipertension == "1" else "____________":17}{"Corazón" if enf_corazon == "1" else "____________":15}{"Cáncer" if cancer == "1" else "____________":15}{"Tabaquismo" if tabaquismo == "1" else "____________":15}{"Con vacuna" if vacuna_covid == "1" else "____________":15}')
  
  print(f'\n{"Clasificación IMC":27}{"Cantidad":<11}{"Porcentaje":>10}')
  lista = []
  for num in range(len(contador_imc)):
    lista_temp = []
    lista_temp = [contador_imc[num], etiqueta[num], round(contador_imc[num] / len(empleados) * 100)]
    lista.append(lista_temp)  
  lista.sort(reverse = True)

  for dato in lista:
    contador, etiqueta_imc, porcentaje = dato
    print(f"{etiqueta_imc:20} {contador:7} {porcentaje:10}%")  
  print(f'{"Total de empleados:":<10} {len(empleados):<10}')
  

#_____________________________________________________________________________________________________________________________

def actualizar_empleado():
  global empleados

  """Explicación de la función 
    la función imprime la información de todos los empleados existentes 
    Se solicita el id de empleado al cual se quiere cambiar la información
    Una vez obteniendo el id se verifica si este existe dentro de la lista
    Si existe el empleado se solicita el número del dato que se quiere cambiar
    Se solicita el dato a sustituir
    Se vuelve a dirigir al inicio
    Si se quiere visualizar se hace uso de la función consultar empleado"""
  print("    \nBienvenido a la función actualizar información de empleados")

  print(f'{"ID":<10}{"Nombre":<15}{"Peso":<10}{"Estatura":<10}{"Enfermedades":^77}{"Vacuna Covid":<12}')
  for empleado in empleados:
    id, nombre, edad, peso, estatura, diabetes, hipertension, enf_corazon, cancer, tabaquismo, vacuna_covid = empleado    
    print(f'{id:<10}{nombre:<15}{peso:<10}{estatura:<10}{"Diabetes" if diabetes == "1" else "____________":15}{"Hipertensión" if hipertension == "1" else "____________":17}{"Corazón" if enf_corazon == "1" else "____________":15}{"Cáncer" if cancer == "1" else "____________":15}{"Tabaquismo" if tabaquismo == "1" else "____________":15}{"Vacunado" if vacuna_covid == "1" else "____________":15}')

  id_cambio = input("   Ingresa el id del empleado que quieres cambiar: ")

  for numero in range(len(empleados)):

    empleado = empleados[numero]    
    id_empleado = empleado[0]
    if id_empleado == id_cambio:
      existe = True
      no_empleado = int(numero)
      break
    else:
      existe = False
  if existe == True:
    print("\nEmpleado existente")
    
  id, nombre, edad, peso, estatura, diabetes, hipertension, corazon, cancer, tabaquismo, vacuna_covid = empleados[no_empleado]
  print(f'{"ID":<10}{"Nombre":<15}{"Peso":<10}{"Altura":<10}{"Enfermedades":^77}{"Vacuna Covid":<12}')
  print(f'{id:<10}{nombre:<15}{peso:<10}{estatura:<10}{"Diabetes" if diabetes == "1" else "____________":15}{"Hipertensión" if hipertension == "1" else "____________":17}{"Corazón" if enf_corazon == "1" else "____________":15}{"Cáncer" if cancer == "1" else "____________":15}{"Tabaquismo" if tabaquismo == "1" else "____________":15}{"Con vacuna" if vacuna_covid == "1" else "____________":15}')
  
  dato = int(input("\n¿Qué dato desea cambiar? "))
  empleados[int(id_cambio) - 1][dato] = input("\nIngresa el dato a cambiar: ") 
  
#_____________________________________________________________________________________________________________________________


def consulta_empleado():
  """Explicación de la función
    En la función  inserta un ciclo while para repetir el proceso hasta que el usuario indique que no quiere consultar otro empleado 
    1. Se solicita el Id de la persona que se quiere consultar
    2. Se vefirica si el id está dentro de la lista empleados
    3. Si no existe se interrumpe el ciclo while
    4. Si existe se imprimen los datos del empleado
    5. Se vuelve a preguntar si se quiere consultar un nuevo empleado
    6. Si la respuesta es "s" se vuelven a repetir los pasos 1-5
    7. Si la respuesta en "n" nos devuelve al menú principal"""
    
  print("  \nBienvenido a la consulta de información de empleados")

  while True:
      id_cambio = input("   Ingresa el ID del empleado que deseas consultar: ")   
      for num in range(len(empleados)):       
        empleado = empleados[num]        
        id_empleado = empleado[0]

        if id_empleado == id_cambio:
          existe = True
          no_empleado = int(num)
          break
        else:
          existe = False

      if existe == True:
        print("Empleado existente")        
        id, nombre, edad, peso, estatura, diabetes, hipertension, enf_corazon, cancer, tabaquismo, vacuna_covid = empleado
        print(f'{"ID":<10}{"Nombre":<15}{"Peso":<10}{"Estatura":<10}{"Enfermedades":^77}{"Vacuna Covid":<12}')
        print(f'{id:<10}{nombre:<15}{peso:<10}{estatura:<10}{"Diabetes" if diabetes == "1" else "____________":15}{"Hipertensión" if hipertension == "1" else "____________":17}{"Corazón" if enf_corazon == "1" else "____________":15}{"Cáncer" if cancer == "1" else "____________":15}{"Tabaquismo" if tabaquismo == "1" else "____________":15}{"Con vacuna" if vacuna_covid == "1" else "____________":15}')      
      else:
        print("Id del empleado no existe")

      again = input("Deseas consultar otro empleado's' / 'n' ")
      if again.lower() == "s":
        continue
      else:
        break
 
#_____________________________________________________________________________________________________________________________
def reporte_empleado():
  """Emplicación de la función
  La función se inicializa con un contador de enfermedades
  Se guarda en una lista el nombre de las enfermedades existentes
  Se imprime el título de la tabla a generar
  Se calcula el número de personas que tiene diabetes, hipertensión, enfermedad del corazón, cancer, tabaquismo y si se ha vacunado
  Se imprimen los datos de los pacientes en forma de reporte
  Se calcula la cantidad y el porcentaje de personas con cada enfermedad
  Se genera el reporte general de todos los empleados"""
  
  print("             \nReporte de todos los empleados")
  #print(imc_empleado())
  
  contador_enfermedades = [0, 0, 0, 0, 0, 0]
  enfermedad = ["Diabetes", "Hipertensión", "Corazón", "Cáncer", "Tabaquismo", "Vacuna Covid"]
  print(f'{"ID":<10}{"Nombre":<15}{"Peso":<10}{"Estatura":<10}{"Enfermedades":^77}{"Vacuna Covid":<12}')
  
  for empleado in empleados:
    id, nombre, edad, peso, estatura, diabetes, hipertension, enf_corazon, cancer, tabaquismo, vacuna_covid = empleado

    if diabetes == "1":
      contador_enfermedades[0] += 1
    if hipertension == "1":
      contador_enfermedades[1] += 1
    if enf_corazon == "1":
      contador_enfermedades[2] += 1
    if cancer == "1":
      contador_enfermedades[3] += 1
    if tabaquismo == "1":
      contador_enfermedades[4] += 1
    if vacuna_covid == "1":
      contador_enfermedades[5] += 1

    print(f'{id:<10}{nombre:<15}{peso:<10}{estatura:<10}{"Diabetes" if diabetes == "1" else "____________":15}{"Hipertensión" if hipertension == "1" else "____________":17}{"Corazón" if enf_corazon == "1" else "____________":15}{"Cáncer" if cancer == "1" else "____________":15}{"Tabaquismo" if tabaquismo == "1" else "____________":15}{"Con vacuna" if vacuna_covid == "1" else "____________":15}')
  
  print(f'\n{"Enfermedad":27}{"Cantidad":10}{"Porcentaje":<10}')

  lista = []
  for num in range(len(contador_enfermedades)):
    lista_temp = []
    lista_temp = [contador_enfermedades[num], enfermedad[num], round(contador_enfermedades[num] / len(empleados) * 100)]
    lista.append(lista_temp)
  
  lista.sort(reverse = True)

  for dato in lista:
    contador, enfermedad, porcentaje = dato
    print(f"{enfermedad:20} {contador:7} {porcentaje:10}%")

  print(f'{" Total de empleados:":<10} {len(empleados):<10}')

def leer_archivo(nombre):
  
  with open(nombre_archivo, "r") as archivo:
    
    contenido = archivo.readlines() 

    for elemento in contenido:
      
      linea = elemento.split(",") 
      linea[10] = linea[10][:-1] 
      empleados.append(linea) 
#_____________________________________________________________________________________________________________________________
def salir():
  """Explicación de la función
  La función salir se ejecuta si se la opción elegida es el número 6
  Se sale o da break al ciclo while
  Deja de preguntar la opción a elegir así como el menú principal
  """
  print("Usted salió\nGracias por usar el sistema")
#_____________________________________________________________________________________________________________________________
def menu():
  """Explicación de la función
  """
  print(
    """  \nSistema de salud y bienestar del empleado"
    1. Alta de empleado
    2. Calcular IMC de empleado
    3. Actualizar empleado
    4. Consulta un empleado"
    5. Reporte de todos los empleados
    6. Salir""")
  opcion = int(input("  Ingresa la opción "))
  return opcion
#_____________________________________________________________________________________________________________________________
def main():
  """Expliación de la función
  La función principal main engloba las opciones den menú
  Si se manda a llamar aparecerá la función del menú
  Una vez presentado el menú se indica que si se preciona la opción 1 se dirige a dar de alta un empleado
  Si se teclea el número 2 manda a llamar la función imc 
  Si se teclea el número 3 se manda a llamar la función actualizar empleado
  Si se teclea la opción 4 se menda a llamar la fucnión consultar un empleado
  y si teclea la opción 5 se manda a llamar la dunción de reporte de los empleados
  por otro lado si se teclea la opción 6 se sale del menú principal."""
  global empleados
  while True:
    opcion = menu()
    if opcion < 1 or opcion > 7:
      print("Selecciona un número correcto del menú")
      continue  
    elif opcion == 1:
       alta_empleado() 
       guardar_archivo(nombre_archivo)      
    elif opcion == 2:
      imc_empleado()  
      leer_archivo(nombre_archivo)      
    elif opcion == 3:
      actualizar_empleado()
      leer_archivo(nombre_archivo) 
    elif opcion == 4:
      consulta_empleado()
      leer_archivo(nombre_archivo) 
    elif opcion == 5:
      reporte_empleado() 
      leer_archivo(nombre_archivo)       
    else:
      salir()
      break
main()
     
